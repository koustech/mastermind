// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        (unknown)
// source: proto/mastermind/v1/mastermind.proto

package mastermindv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A MissionState is a state the mission can be in at any point in time
type MissionState int32

const (
	MissionState_MISSION_STATE_UNSPECIFIED   MissionState = 0
	MissionState_MISSION_STATE_APPROACH      MissionState = 1 // Approaching plane
	MissionState_MISSION_STATE_DETECTING     MissionState = 2 // Detecting and will control with camera
	MissionState_MISSION_STATE_DETECTING_GPS MissionState = 3 // Detecting and will control with GPS
	MissionState_MISSION_STATE_LOCK          MissionState = 4 // Detected and controlling with camera
	MissionState_MISSION_STATE_LOCK_GPS      MissionState = 5 // Detected and controlling with GPS
	MissionState_MISSION_STATE_KAMIKAZE      MissionState = 6 // Detecting with camera, controlling with QR coordinates
	MissionState_MISSION_STATE_NEUTRAL       MissionState = 7 // Neutral mode, no control from mastermind
)

// Enum value maps for MissionState.
var (
	MissionState_name = map[int32]string{
		0: "MISSION_STATE_UNSPECIFIED",
		1: "MISSION_STATE_APPROACH",
		2: "MISSION_STATE_DETECTING",
		3: "MISSION_STATE_DETECTING_GPS",
		4: "MISSION_STATE_LOCK",
		5: "MISSION_STATE_LOCK_GPS",
		6: "MISSION_STATE_KAMIKAZE",
		7: "MISSION_STATE_NEUTRAL",
	}
	MissionState_value = map[string]int32{
		"MISSION_STATE_UNSPECIFIED":   0,
		"MISSION_STATE_APPROACH":      1,
		"MISSION_STATE_DETECTING":     2,
		"MISSION_STATE_DETECTING_GPS": 3,
		"MISSION_STATE_LOCK":          4,
		"MISSION_STATE_LOCK_GPS":      5,
		"MISSION_STATE_KAMIKAZE":      6,
		"MISSION_STATE_NEUTRAL":       7,
	}
)

func (x MissionState) Enum() *MissionState {
	p := new(MissionState)
	*p = x
	return p
}

func (x MissionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MissionState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mastermind_v1_mastermind_proto_enumTypes[0].Descriptor()
}

func (MissionState) Type() protoreflect.EnumType {
	return &file_proto_mastermind_v1_mastermind_proto_enumTypes[0]
}

func (x MissionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MissionState.Descriptor instead.
func (MissionState) EnumDescriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{0}
}

// A StateTransition is an action that causes the current MissonState to change
//
// e.g. STATE_TRANSITION_TARGET_APPROACHED changes mission state
// from MISSION_STATE_APPROACH to MISSION_STATE_FOLLOWING
type StateTransition int32

const (
	StateTransition_STATE_TRANSITION_UNSPECIFIED            StateTransition = 0
	StateTransition_STATE_TRANSITION_TARGET_APPROACHED      StateTransition = 1 // Target approached by UAV and will control with camera
	StateTransition_STATE_TRANSITION_TARGET_APPROACHED_GPS  StateTransition = 2 // Target approached by UAV and will control with GPS
	StateTransition_STATE_TRANSITION_TARGET_DETECTED        StateTransition = 3 // Target detected by UAV
	StateTransition_STATE_TRANSITION_LOCK_FAILED            StateTransition = 4
	StateTransition_STATE_TRANSITION_LOCK_SUCCESS           StateTransition = 5
	StateTransition_STATE_TRANSITION_QR_SUCCESS             StateTransition = 6
	StateTransition_STATE_TRANSITION_QR_FAILED              StateTransition = 7
	StateTransition_STATE_TRANSITION_MODE_KAMIKAZE_SELECTED StateTransition = 8
	StateTransition_STATE_TRANSITION_MODE_APPROACH_SELECTED StateTransition = 9
	StateTransition_STATE_TRANSITION_MODE_NEUTRAL_SELECTED  StateTransition = 10 // Switch to neutral mode
)

// Enum value maps for StateTransition.
var (
	StateTransition_name = map[int32]string{
		0:  "STATE_TRANSITION_UNSPECIFIED",
		1:  "STATE_TRANSITION_TARGET_APPROACHED",
		2:  "STATE_TRANSITION_TARGET_APPROACHED_GPS",
		3:  "STATE_TRANSITION_TARGET_DETECTED",
		4:  "STATE_TRANSITION_LOCK_FAILED",
		5:  "STATE_TRANSITION_LOCK_SUCCESS",
		6:  "STATE_TRANSITION_QR_SUCCESS",
		7:  "STATE_TRANSITION_QR_FAILED",
		8:  "STATE_TRANSITION_MODE_KAMIKAZE_SELECTED",
		9:  "STATE_TRANSITION_MODE_APPROACH_SELECTED",
		10: "STATE_TRANSITION_MODE_NEUTRAL_SELECTED",
	}
	StateTransition_value = map[string]int32{
		"STATE_TRANSITION_UNSPECIFIED":            0,
		"STATE_TRANSITION_TARGET_APPROACHED":      1,
		"STATE_TRANSITION_TARGET_APPROACHED_GPS":  2,
		"STATE_TRANSITION_TARGET_DETECTED":        3,
		"STATE_TRANSITION_LOCK_FAILED":            4,
		"STATE_TRANSITION_LOCK_SUCCESS":           5,
		"STATE_TRANSITION_QR_SUCCESS":             6,
		"STATE_TRANSITION_QR_FAILED":              7,
		"STATE_TRANSITION_MODE_KAMIKAZE_SELECTED": 8,
		"STATE_TRANSITION_MODE_APPROACH_SELECTED": 9,
		"STATE_TRANSITION_MODE_NEUTRAL_SELECTED":  10,
	}
)

func (x StateTransition) Enum() *StateTransition {
	p := new(StateTransition)
	*p = x
	return p
}

func (x StateTransition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateTransition) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mastermind_v1_mastermind_proto_enumTypes[1].Descriptor()
}

func (StateTransition) Type() protoreflect.EnumType {
	return &file_proto_mastermind_v1_mastermind_proto_enumTypes[1]
}

func (x StateTransition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StateTransition.Descriptor instead.
func (StateTransition) EnumDescriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{1}
}

// PIDLevel represents the plane's agility. PID's corresponding to each level
// are stored onboard in the mastermind config.
type PIDLevel int32

const (
	PIDLevel_PID_LEVEL_UNSPECIFIED PIDLevel = 0
	PIDLevel_PID_LEVEL_1           PIDLevel = 1
	PIDLevel_PID_LEVEL_2           PIDLevel = 2
	PIDLevel_PID_LEVEL_3           PIDLevel = 3
	PIDLevel_PID_LEVEL_4           PIDLevel = 4
	PIDLevel_PID_LEVEL_5           PIDLevel = 5
	PIDLevel_PID_LEVEL_6           PIDLevel = 6
	PIDLevel_PID_LEVEL_7           PIDLevel = 7
	PIDLevel_PID_LEVEL_8           PIDLevel = 8
)

// Enum value maps for PIDLevel.
var (
	PIDLevel_name = map[int32]string{
		0: "PID_LEVEL_UNSPECIFIED",
		1: "PID_LEVEL_1",
		2: "PID_LEVEL_2",
		3: "PID_LEVEL_3",
		4: "PID_LEVEL_4",
		5: "PID_LEVEL_5",
		6: "PID_LEVEL_6",
		7: "PID_LEVEL_7",
		8: "PID_LEVEL_8",
	}
	PIDLevel_value = map[string]int32{
		"PID_LEVEL_UNSPECIFIED": 0,
		"PID_LEVEL_1":           1,
		"PID_LEVEL_2":           2,
		"PID_LEVEL_3":           3,
		"PID_LEVEL_4":           4,
		"PID_LEVEL_5":           5,
		"PID_LEVEL_6":           6,
		"PID_LEVEL_7":           7,
		"PID_LEVEL_8":           8,
	}
)

func (x PIDLevel) Enum() *PIDLevel {
	p := new(PIDLevel)
	*p = x
	return p
}

func (x PIDLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PIDLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mastermind_v1_mastermind_proto_enumTypes[2].Descriptor()
}

func (PIDLevel) Type() protoreflect.EnumType {
	return &file_proto_mastermind_v1_mastermind_proto_enumTypes[2]
}

func (x PIDLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PIDLevel.Descriptor instead.
func (PIDLevel) EnumDescriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{2}
}

type UpdateStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateTransition StateTransition `protobuf:"varint,1,opt,name=state_transition,json=stateTransition,proto3,enum=mastermind.v1.StateTransition" json:"state_transition,omitempty"`
}

func (x *UpdateStateRequest) Reset() {
	*x = UpdateStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStateRequest) ProtoMessage() {}

func (x *UpdateStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateStateRequest) GetStateTransition() StateTransition {
	if x != nil {
		return x.StateTransition
	}
	return StateTransition_STATE_TRANSITION_UNSPECIFIED
}

type UpdateStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldState        MissionState    `protobuf:"varint,1,opt,name=old_state,json=oldState,proto3,enum=mastermind.v1.MissionState" json:"old_state,omitempty"`
	StateTransition StateTransition `protobuf:"varint,2,opt,name=state_transition,json=stateTransition,proto3,enum=mastermind.v1.StateTransition" json:"state_transition,omitempty"`
	CurrentState    MissionState    `protobuf:"varint,3,opt,name=current_state,json=currentState,proto3,enum=mastermind.v1.MissionState" json:"current_state,omitempty"`
}

func (x *UpdateStateResponse) Reset() {
	*x = UpdateStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStateResponse) ProtoMessage() {}

func (x *UpdateStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStateResponse.ProtoReflect.Descriptor instead.
func (*UpdateStateResponse) Descriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateStateResponse) GetOldState() MissionState {
	if x != nil {
		return x.OldState
	}
	return MissionState_MISSION_STATE_UNSPECIFIED
}

func (x *UpdateStateResponse) GetStateTransition() StateTransition {
	if x != nil {
		return x.StateTransition
	}
	return StateTransition_STATE_TRANSITION_UNSPECIFIED
}

func (x *UpdateStateResponse) GetCurrentState() MissionState {
	if x != nil {
		return x.CurrentState
	}
	return MissionState_MISSION_STATE_UNSPECIFIED
}

type GetTelemetryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTelemetryRequest) Reset() {
	*x = GetTelemetryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTelemetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTelemetryRequest) ProtoMessage() {}

func (x *GetTelemetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTelemetryRequest.ProtoReflect.Descriptor instead.
func (*GetTelemetryRequest) Descriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{2}
}

type GetTelemetryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeBootMs    uint64  `protobuf:"varint,1,opt,name=time_boot_ms,json=timeBootMs,proto3" json:"time_boot_ms,omitempty"`          // Timestamp of last message in milliseconds
	Lat           int32   `protobuf:"varint,2,opt,name=lat,proto3" json:"lat,omitempty"`                                            // Latitude in degrees * 10^7
	Lon           int32   `protobuf:"varint,3,opt,name=lon,proto3" json:"lon,omitempty"`                                            // Longitude in degrees * 10^7
	RelativeAlt   int32   `protobuf:"varint,4,opt,name=relative_alt,json=relativeAlt,proto3" json:"relative_alt,omitempty"`         // Altitude above ground in millimeters
	Roll          float32 `protobuf:"fixed32,5,opt,name=roll,proto3" json:"roll,omitempty"`                                         // Roll angle (-pi..+pi)
	Pitch         float32 `protobuf:"fixed32,6,opt,name=pitch,proto3" json:"pitch,omitempty"`                                       // Pitch angle (-pi..+pi)
	Yaw           float32 `protobuf:"fixed32,7,opt,name=yaw,proto3" json:"yaw,omitempty"`                                           // Yaw / heading angle from north (-pi..+pi)
	Airspeed      float32 `protobuf:"fixed32,8,opt,name=airspeed,proto3" json:"airspeed,omitempty"`                                 // Airspeed in m/s
	Groundspeed   float32 `protobuf:"fixed32,9,opt,name=groundspeed,proto3" json:"groundspeed,omitempty"`                           // Groundspeed in m/s
	WpDist        uint32  `protobuf:"varint,10,opt,name=wp_dist,json=wpDist,proto3" json:"wp_dist,omitempty"`                       // Distance to active waypoint in meters. 0 if no waypoint
	WindSpeed     float32 `protobuf:"fixed32,11,opt,name=wind_speed,json=windSpeed,proto3" json:"wind_speed,omitempty"`             // Wind speed in m/s
	WindDirection float32 `protobuf:"fixed32,12,opt,name=wind_direction,json=windDirection,proto3" json:"wind_direction,omitempty"` // Wind direction in degrees
}

func (x *GetTelemetryResponse) Reset() {
	*x = GetTelemetryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTelemetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTelemetryResponse) ProtoMessage() {}

func (x *GetTelemetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTelemetryResponse.ProtoReflect.Descriptor instead.
func (*GetTelemetryResponse) Descriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{3}
}

func (x *GetTelemetryResponse) GetTimeBootMs() uint64 {
	if x != nil {
		return x.TimeBootMs
	}
	return 0
}

func (x *GetTelemetryResponse) GetLat() int32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *GetTelemetryResponse) GetLon() int32 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *GetTelemetryResponse) GetRelativeAlt() int32 {
	if x != nil {
		return x.RelativeAlt
	}
	return 0
}

func (x *GetTelemetryResponse) GetRoll() float32 {
	if x != nil {
		return x.Roll
	}
	return 0
}

func (x *GetTelemetryResponse) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *GetTelemetryResponse) GetYaw() float32 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

func (x *GetTelemetryResponse) GetAirspeed() float32 {
	if x != nil {
		return x.Airspeed
	}
	return 0
}

func (x *GetTelemetryResponse) GetGroundspeed() float32 {
	if x != nil {
		return x.Groundspeed
	}
	return 0
}

func (x *GetTelemetryResponse) GetWpDist() uint32 {
	if x != nil {
		return x.WpDist
	}
	return 0
}

func (x *GetTelemetryResponse) GetWindSpeed() float32 {
	if x != nil {
		return x.WindSpeed
	}
	return 0
}

func (x *GetTelemetryResponse) GetWindDirection() float32 {
	if x != nil {
		return x.WindDirection
	}
	return 0
}

// Target is a target being locked onto by the UAV
type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X      uint32  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`                       // x coordinate of center of bounding box in standard coordinate system (top left is 0, 0)
	Y      uint32  `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`                       // y coordinate of center of bounding box in standard coordinate system (top left is 0, 0)
	Width  uint32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`               // width of target bounding box in pixels
	Height uint32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`             // height of target bounding box in pixels
	XLock  float32 `protobuf:"fixed32,5,opt,name=x_lock,json=xLock,proto3" json:"x_lock,omitempty"` // x_lock of center of bounding box in lock coordinate system (center is 0, 0)
	YLock  float32 `protobuf:"fixed32,6,opt,name=y_lock,json=yLock,proto3" json:"y_lock,omitempty"` // y_lock of center of bounding box in lock coordinate system (center is 0, 0)
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{4}
}

func (x *Target) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Target) GetY() uint32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Target) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Target) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Target) GetXLock() float32 {
	if x != nil {
		return x.XLock
	}
	return 0
}

func (x *Target) GetYLock() float32 {
	if x != nil {
		return x.YLock
	}
	return 0
}

type GetDetailedTelemetryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDetailedTelemetryRequest) Reset() {
	*x = GetDetailedTelemetryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailedTelemetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailedTelemetryRequest) ProtoMessage() {}

func (x *GetDetailedTelemetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailedTelemetryRequest.ProtoReflect.Descriptor instead.
func (*GetDetailedTelemetryRequest) Descriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{5}
}

type GetDetailedTelemetryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeBootMs  uint64  `protobuf:"varint,1,opt,name=time_boot_ms,json=timeBootMs,proto3" json:"time_boot_ms,omitempty"`  // Timestamp of last message in milliseconds
	Lat         int32   `protobuf:"varint,2,opt,name=lat,proto3" json:"lat,omitempty"`                                    // Latitude in degrees * 10^7
	Lon         int32   `protobuf:"varint,3,opt,name=lon,proto3" json:"lon,omitempty"`                                    // Longitude in degrees * 10^7
	RelativeAlt int32   `protobuf:"varint,4,opt,name=relative_alt,json=relativeAlt,proto3" json:"relative_alt,omitempty"` // Altitude above ground in millimeters
	Roll        float32 `protobuf:"fixed32,5,opt,name=roll,proto3" json:"roll,omitempty"`                                 // Roll angle (-pi..+pi)
	Pitch       float32 `protobuf:"fixed32,6,opt,name=pitch,proto3" json:"pitch,omitempty"`                               // Pitch angle (-pi..+pi)
	Yaw         float32 `protobuf:"fixed32,7,opt,name=yaw,proto3" json:"yaw,omitempty"`                                   // Yaw / heading angle from north (-pi..+pi)
	Airspeed    float32 `protobuf:"fixed32,8,opt,name=airspeed,proto3" json:"airspeed,omitempty"`                         // Airspeed in m/s
	Groundspeed float32 `protobuf:"fixed32,9,opt,name=groundspeed,proto3" json:"groundspeed,omitempty"`                   // Groundspeed in m/s
	WpDist      uint32  `protobuf:"varint,10,opt,name=wp_dist,json=wpDist,proto3" json:"wp_dist,omitempty"`               // Distance to active waypoint in meters. 0 if no waypoint
	Battery     int32   `protobuf:"varint,11,opt,name=battery,proto3" json:"battery,omitempty"`                           // Remaining battery energy. Values: [0-100], -1:
	// autopilot does not estimate the remaining battery.
	Autonomous bool `protobuf:"varint,12,opt,name=autonomous,proto3" json:"autonomous,omitempty"` // True if the UAV is in a mode being controlled
	// autonomously, False otherwise
	Target        *Target `protobuf:"bytes,13,opt,name=target,proto3,oneof" json:"target,omitempty"`                                // Target being locked on by the UAV
	WindSpeed     float32 `protobuf:"fixed32,14,opt,name=wind_speed,json=windSpeed,proto3" json:"wind_speed,omitempty"`             // Wind speed in m/s
	WindDirection float32 `protobuf:"fixed32,15,opt,name=wind_direction,json=windDirection,proto3" json:"wind_direction,omitempty"` // Wind direction in degrees
}

func (x *GetDetailedTelemetryResponse) Reset() {
	*x = GetDetailedTelemetryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailedTelemetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailedTelemetryResponse) ProtoMessage() {}

func (x *GetDetailedTelemetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailedTelemetryResponse.ProtoReflect.Descriptor instead.
func (*GetDetailedTelemetryResponse) Descriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{6}
}

func (x *GetDetailedTelemetryResponse) GetTimeBootMs() uint64 {
	if x != nil {
		return x.TimeBootMs
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetLat() int32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetLon() int32 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetRelativeAlt() int32 {
	if x != nil {
		return x.RelativeAlt
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetRoll() float32 {
	if x != nil {
		return x.Roll
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetYaw() float32 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetAirspeed() float32 {
	if x != nil {
		return x.Airspeed
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetGroundspeed() float32 {
	if x != nil {
		return x.Groundspeed
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetWpDist() uint32 {
	if x != nil {
		return x.WpDist
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetBattery() int32 {
	if x != nil {
		return x.Battery
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetAutonomous() bool {
	if x != nil {
		return x.Autonomous
	}
	return false
}

func (x *GetDetailedTelemetryResponse) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *GetDetailedTelemetryResponse) GetWindSpeed() float32 {
	if x != nil {
		return x.WindSpeed
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetWindDirection() float32 {
	if x != nil {
		return x.WindDirection
	}
	return 0
}

type SetPIDLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level PIDLevel `protobuf:"varint,1,opt,name=level,proto3,enum=mastermind.v1.PIDLevel" json:"level,omitempty"`
}

func (x *SetPIDLevelRequest) Reset() {
	*x = SetPIDLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPIDLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPIDLevelRequest) ProtoMessage() {}

func (x *SetPIDLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPIDLevelRequest.ProtoReflect.Descriptor instead.
func (*SetPIDLevelRequest) Descriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{7}
}

func (x *SetPIDLevelRequest) GetLevel() PIDLevel {
	if x != nil {
		return x.Level
	}
	return PIDLevel_PID_LEVEL_UNSPECIFIED
}

type SetPIDLevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandSucceeded bool `protobuf:"varint,1,opt,name=command_succeeded,json=commandSucceeded,proto3" json:"command_succeeded,omitempty"`
}

func (x *SetPIDLevelResponse) Reset() {
	*x = SetPIDLevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPIDLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPIDLevelResponse) ProtoMessage() {}

func (x *SetPIDLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPIDLevelResponse.ProtoReflect.Descriptor instead.
func (*SetPIDLevelResponse) Descriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{8}
}

func (x *SetPIDLevelResponse) GetCommandSucceeded() bool {
	if x != nil {
		return x.CommandSucceeded
	}
	return false
}

type SetSpeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewSpeed float32 `protobuf:"fixed32,1,opt,name=new_speed,json=newSpeed,proto3" json:"new_speed,omitempty"`
}

func (x *SetSpeedRequest) Reset() {
	*x = SetSpeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpeedRequest) ProtoMessage() {}

func (x *SetSpeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpeedRequest.ProtoReflect.Descriptor instead.
func (*SetSpeedRequest) Descriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{9}
}

func (x *SetSpeedRequest) GetNewSpeed() float32 {
	if x != nil {
		return x.NewSpeed
	}
	return 0
}

type SetSpeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandSucceeded bool `protobuf:"varint,1,opt,name=command_succeeded,json=commandSucceeded,proto3" json:"command_succeeded,omitempty"`
}

func (x *SetSpeedResponse) Reset() {
	*x = SetSpeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpeedResponse) ProtoMessage() {}

func (x *SetSpeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpeedResponse.ProtoReflect.Descriptor instead.
func (*SetSpeedResponse) Descriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{10}
}

func (x *SetSpeedResponse) GetCommandSucceeded() bool {
	if x != nil {
		return x.CommandSucceeded
	}
	return false
}

// GotoWaypoint sends a waypoint in the MAV_FRAME_GLOBAL_RELATIVE_ALT frame to
// go to
type GotoWaypointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat float32 `protobuf:"fixed32,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon float32 `protobuf:"fixed32,2,opt,name=lon,proto3" json:"lon,omitempty"`
	Alt float32 `protobuf:"fixed32,3,opt,name=alt,proto3" json:"alt,omitempty"`
}

func (x *GotoWaypointRequest) Reset() {
	*x = GotoWaypointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GotoWaypointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GotoWaypointRequest) ProtoMessage() {}

func (x *GotoWaypointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GotoWaypointRequest.ProtoReflect.Descriptor instead.
func (*GotoWaypointRequest) Descriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{11}
}

func (x *GotoWaypointRequest) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *GotoWaypointRequest) GetLon() float32 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *GotoWaypointRequest) GetAlt() float32 {
	if x != nil {
		return x.Alt
	}
	return 0
}

// SetAttitude sends the desired attitude of the plane in degrees. Mastermind changes mode to FBWB before giving commands
type SetAttitudeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target *Target `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"` // positions of the target plane on the live stream
}

func (x *SetAttitudeRequest) Reset() {
	*x = SetAttitudeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAttitudeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAttitudeRequest) ProtoMessage() {}

func (x *SetAttitudeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAttitudeRequest.ProtoReflect.Descriptor instead.
func (*SetAttitudeRequest) Descriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{12}
}

func (x *SetAttitudeRequest) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type SetAttitudeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetAttitudeResponse) Reset() {
	*x = SetAttitudeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAttitudeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAttitudeResponse) ProtoMessage() {}

func (x *SetAttitudeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAttitudeResponse.ProtoReflect.Descriptor instead.
func (*SetAttitudeResponse) Descriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{13}
}

type GotoWaypointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandSucceeded bool `protobuf:"varint,1,opt,name=command_succeeded,json=commandSucceeded,proto3" json:"command_succeeded,omitempty"`
}

func (x *GotoWaypointResponse) Reset() {
	*x = GotoWaypointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GotoWaypointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GotoWaypointResponse) ProtoMessage() {}

func (x *GotoWaypointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GotoWaypointResponse.ProtoReflect.Descriptor instead.
func (*GotoWaypointResponse) Descriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{14}
}

func (x *GotoWaypointResponse) GetCommandSucceeded() bool {
	if x != nil {
		return x.CommandSucceeded
	}
	return false
}

type Time struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hours        uint32 `protobuf:"varint,1,opt,name=hours,proto3" json:"hours,omitempty"`
	Minutes      uint32 `protobuf:"varint,2,opt,name=minutes,proto3" json:"minutes,omitempty"`
	Seconds      uint32 `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Milliseconds uint32 `protobuf:"varint,4,opt,name=milliseconds,proto3" json:"milliseconds,omitempty"`
}

func (x *Time) Reset() {
	*x = Time{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Time) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Time) ProtoMessage() {}

func (x *Time) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mastermind_v1_mastermind_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Time.ProtoReflect.Descriptor instead.
func (*Time) Descriptor() ([]byte, []int) {
	return file_proto_mastermind_v1_mastermind_proto_rawDescGZIP(), []int{15}
}

func (x *Time) GetHours() uint32 {
	if x != nil {
		return x.Hours
	}
	return 0
}

func (x *Time) GetMinutes() uint32 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

func (x *Time) GetSeconds() uint32 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *Time) GetMilliseconds() uint32 {
	if x != nil {
		return x.Milliseconds
	}
	return 0
}

var File_proto_mastermind_v1_mastermind_proto protoreflect.FileDescriptor

var file_proto_mastermind_v1_mastermind_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x22, 0x5f, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x10, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdc, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08,
	0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd8, 0x02, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x62, 0x6f,
	0x6f, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x69, 0x6d,
	0x65, 0x42, 0x6f, 0x6f, 0x74, 0x4d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x79, 0x61, 0x77, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x79, 0x61, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x69,
	0x72, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x69,
	0x72, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x70, 0x5f, 0x64,
	0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x70, 0x44, 0x69, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x6e, 0x64, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x77, 0x69, 0x6e, 0x64, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x80, 0x01, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x78, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x78, 0x4c,
	0x6f, 0x63, 0x6b, 0x12, 0x15, 0x0a, 0x06, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd9, 0x03, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x4d, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x6c, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x41, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x12, 0x10, 0x0a,
	0x03, 0x79, 0x61, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x79, 0x61, 0x77, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x69, 0x72, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x61, 0x69, 0x72, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x77, 0x70, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x77, 0x70, 0x44, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d, 0x6f, 0x75, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d, 0x6f, 0x75, 0x73,
	0x12, 0x32, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x00, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x5f, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x6e, 0x64, 0x5f, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x77, 0x69, 0x6e,
	0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x43, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x50, 0x49, 0x44, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x49, 0x44, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x42, 0x0a, 0x13, 0x53, 0x65,
	0x74, 0x50, 0x49, 0x44, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x22, 0x2e,
	0x0a, 0x0f, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x53, 0x70, 0x65, 0x65, 0x64, 0x22, 0x3f,
	0x0a, 0x10, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x22,
	0x4b, 0x0a, 0x13, 0x47, 0x6f, 0x74, 0x6f, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x61, 0x6c, 0x74, 0x22, 0x43, 0x0a, 0x12,
	0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x14, 0x47, 0x6f, 0x74, 0x6f,
	0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x22, 0x74, 0x0a,
	0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x2a, 0xf2, 0x01, 0x0a, 0x0c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x41, 0x43, 0x48, 0x10, 0x01, 0x12,
	0x1b, 0x0a, 0x17, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x44, 0x45, 0x54, 0x45, 0x43, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b,
	0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x45,
	0x54, 0x45, 0x43, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x47, 0x50, 0x53, 0x10, 0x03, 0x12, 0x16, 0x0a,
	0x12, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4c,
	0x4f, 0x43, 0x4b, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x47, 0x50, 0x53, 0x10,
	0x05, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x4b, 0x41, 0x4d, 0x49, 0x4b, 0x41, 0x5a, 0x45, 0x10, 0x06, 0x12, 0x19, 0x0a,
	0x15, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e,
	0x45, 0x55, 0x54, 0x52, 0x41, 0x4c, 0x10, 0x07, 0x2a, 0xb9, 0x03, 0x0a, 0x0f, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x1c,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x26,
	0x0a, 0x22, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x41,
	0x43, 0x48, 0x45, 0x44, 0x10, 0x01, 0x12, 0x2a, 0x0a, 0x26, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45,
	0x54, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x41, 0x43, 0x48, 0x45, 0x44, 0x5f, 0x47, 0x50, 0x53,
	0x10, 0x02, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x44, 0x45,
	0x54, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x4f, 0x43,
	0x4b, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c,
	0x4f, 0x43, 0x4b, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x1f, 0x0a,
	0x1b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x51, 0x52, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x06, 0x12, 0x1e,
	0x0a, 0x1a, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x51, 0x52, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x12, 0x2b,
	0x0a, 0x27, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4b, 0x41, 0x4d, 0x49, 0x4b, 0x41, 0x5a, 0x45,
	0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x08, 0x12, 0x2b, 0x0a, 0x27, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x41, 0x43, 0x48, 0x5f, 0x53, 0x45,
	0x4c, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x09, 0x12, 0x2a, 0x0a, 0x26, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44,
	0x45, 0x5f, 0x4e, 0x45, 0x55, 0x54, 0x52, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54,
	0x45, 0x44, 0x10, 0x0a, 0x2a, 0xad, 0x01, 0x0a, 0x08, 0x50, 0x49, 0x44, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x49, 0x44, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x50, 0x49, 0x44, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x31, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x50, 0x49, 0x44, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x32, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x50, 0x49, 0x44, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x33, 0x10, 0x03, 0x12,
	0x0f, 0x0a, 0x0b, 0x50, 0x49, 0x44, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x34, 0x10, 0x04,
	0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x49, 0x44, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x35, 0x10,
	0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x49, 0x44, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x36,
	0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x49, 0x44, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f,
	0x37, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x49, 0x44, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c,
	0x5f, 0x38, 0x10, 0x08, 0x32, 0x8f, 0x05, 0x0a, 0x11, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x28, 0x01, 0x30, 0x01, 0x12, 0x59, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12,
	0x71, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x54, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x2a, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x54,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x30, 0x01, 0x12, 0x54, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x50, 0x49, 0x44, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x49, 0x44, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x49, 0x44, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0c, 0x47, 0x6f, 0x74, 0x6f, 0x57, 0x61, 0x79,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x74, 0x6f, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x74, 0x6f, 0x57, 0x61,
	0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56,
	0x0a, 0x0b, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x21, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x74, 0x41, 0x74, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x42, 0xc7, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x75, 0x73,
	0x74, 0x65, 0x63, 0x68, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x2f, 0x76, 0x31,
	0x3b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x4d, 0x58, 0x58, 0xaa, 0x02, 0x0d, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_mastermind_v1_mastermind_proto_rawDescOnce sync.Once
	file_proto_mastermind_v1_mastermind_proto_rawDescData = file_proto_mastermind_v1_mastermind_proto_rawDesc
)

func file_proto_mastermind_v1_mastermind_proto_rawDescGZIP() []byte {
	file_proto_mastermind_v1_mastermind_proto_rawDescOnce.Do(func() {
		file_proto_mastermind_v1_mastermind_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_mastermind_v1_mastermind_proto_rawDescData)
	})
	return file_proto_mastermind_v1_mastermind_proto_rawDescData
}

var file_proto_mastermind_v1_mastermind_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_mastermind_v1_mastermind_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_mastermind_v1_mastermind_proto_goTypes = []interface{}{
	(MissionState)(0),                    // 0: mastermind.v1.MissionState
	(StateTransition)(0),                 // 1: mastermind.v1.StateTransition
	(PIDLevel)(0),                        // 2: mastermind.v1.PIDLevel
	(*UpdateStateRequest)(nil),           // 3: mastermind.v1.UpdateStateRequest
	(*UpdateStateResponse)(nil),          // 4: mastermind.v1.UpdateStateResponse
	(*GetTelemetryRequest)(nil),          // 5: mastermind.v1.GetTelemetryRequest
	(*GetTelemetryResponse)(nil),         // 6: mastermind.v1.GetTelemetryResponse
	(*Target)(nil),                       // 7: mastermind.v1.Target
	(*GetDetailedTelemetryRequest)(nil),  // 8: mastermind.v1.GetDetailedTelemetryRequest
	(*GetDetailedTelemetryResponse)(nil), // 9: mastermind.v1.GetDetailedTelemetryResponse
	(*SetPIDLevelRequest)(nil),           // 10: mastermind.v1.SetPIDLevelRequest
	(*SetPIDLevelResponse)(nil),          // 11: mastermind.v1.SetPIDLevelResponse
	(*SetSpeedRequest)(nil),              // 12: mastermind.v1.SetSpeedRequest
	(*SetSpeedResponse)(nil),             // 13: mastermind.v1.SetSpeedResponse
	(*GotoWaypointRequest)(nil),          // 14: mastermind.v1.GotoWaypointRequest
	(*SetAttitudeRequest)(nil),           // 15: mastermind.v1.SetAttitudeRequest
	(*SetAttitudeResponse)(nil),          // 16: mastermind.v1.SetAttitudeResponse
	(*GotoWaypointResponse)(nil),         // 17: mastermind.v1.GotoWaypointResponse
	(*Time)(nil),                         // 18: mastermind.v1.Time
}
var file_proto_mastermind_v1_mastermind_proto_depIdxs = []int32{
	1,  // 0: mastermind.v1.UpdateStateRequest.state_transition:type_name -> mastermind.v1.StateTransition
	0,  // 1: mastermind.v1.UpdateStateResponse.old_state:type_name -> mastermind.v1.MissionState
	1,  // 2: mastermind.v1.UpdateStateResponse.state_transition:type_name -> mastermind.v1.StateTransition
	0,  // 3: mastermind.v1.UpdateStateResponse.current_state:type_name -> mastermind.v1.MissionState
	7,  // 4: mastermind.v1.GetDetailedTelemetryResponse.target:type_name -> mastermind.v1.Target
	2,  // 5: mastermind.v1.SetPIDLevelRequest.level:type_name -> mastermind.v1.PIDLevel
	7,  // 6: mastermind.v1.SetAttitudeRequest.target:type_name -> mastermind.v1.Target
	3,  // 7: mastermind.v1.MastermindService.UpdateState:input_type -> mastermind.v1.UpdateStateRequest
	5,  // 8: mastermind.v1.MastermindService.GetTelemetry:input_type -> mastermind.v1.GetTelemetryRequest
	8,  // 9: mastermind.v1.MastermindService.GetDetailedTelemetry:input_type -> mastermind.v1.GetDetailedTelemetryRequest
	10, // 10: mastermind.v1.MastermindService.SetPIDLevel:input_type -> mastermind.v1.SetPIDLevelRequest
	12, // 11: mastermind.v1.MastermindService.SetSpeed:input_type -> mastermind.v1.SetSpeedRequest
	14, // 12: mastermind.v1.MastermindService.GotoWaypoint:input_type -> mastermind.v1.GotoWaypointRequest
	15, // 13: mastermind.v1.MastermindService.SetAttitude:input_type -> mastermind.v1.SetAttitudeRequest
	4,  // 14: mastermind.v1.MastermindService.UpdateState:output_type -> mastermind.v1.UpdateStateResponse
	6,  // 15: mastermind.v1.MastermindService.GetTelemetry:output_type -> mastermind.v1.GetTelemetryResponse
	9,  // 16: mastermind.v1.MastermindService.GetDetailedTelemetry:output_type -> mastermind.v1.GetDetailedTelemetryResponse
	11, // 17: mastermind.v1.MastermindService.SetPIDLevel:output_type -> mastermind.v1.SetPIDLevelResponse
	13, // 18: mastermind.v1.MastermindService.SetSpeed:output_type -> mastermind.v1.SetSpeedResponse
	17, // 19: mastermind.v1.MastermindService.GotoWaypoint:output_type -> mastermind.v1.GotoWaypointResponse
	16, // 20: mastermind.v1.MastermindService.SetAttitude:output_type -> mastermind.v1.SetAttitudeResponse
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_mastermind_v1_mastermind_proto_init() }
func file_proto_mastermind_v1_mastermind_proto_init() {
	if File_proto_mastermind_v1_mastermind_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_mastermind_v1_mastermind_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mastermind_v1_mastermind_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mastermind_v1_mastermind_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTelemetryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mastermind_v1_mastermind_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTelemetryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mastermind_v1_mastermind_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mastermind_v1_mastermind_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailedTelemetryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mastermind_v1_mastermind_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailedTelemetryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mastermind_v1_mastermind_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPIDLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mastermind_v1_mastermind_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPIDLevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mastermind_v1_mastermind_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mastermind_v1_mastermind_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mastermind_v1_mastermind_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GotoWaypointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mastermind_v1_mastermind_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAttitudeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mastermind_v1_mastermind_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAttitudeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mastermind_v1_mastermind_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GotoWaypointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mastermind_v1_mastermind_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Time); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_mastermind_v1_mastermind_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_mastermind_v1_mastermind_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_mastermind_v1_mastermind_proto_goTypes,
		DependencyIndexes: file_proto_mastermind_v1_mastermind_proto_depIdxs,
		EnumInfos:         file_proto_mastermind_v1_mastermind_proto_enumTypes,
		MessageInfos:      file_proto_mastermind_v1_mastermind_proto_msgTypes,
	}.Build()
	File_proto_mastermind_v1_mastermind_proto = out.File
	file_proto_mastermind_v1_mastermind_proto_rawDesc = nil
	file_proto_mastermind_v1_mastermind_proto_goTypes = nil
	file_proto_mastermind_v1_mastermind_proto_depIdxs = nil
}
