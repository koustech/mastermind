// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: proto/proxy/v1/proxy.proto

package proxyv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTelemetryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTelemetryRequest) Reset() {
	*x = GetTelemetryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_v1_proxy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTelemetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTelemetryRequest) ProtoMessage() {}

func (x *GetTelemetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_v1_proxy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTelemetryRequest.ProtoReflect.Descriptor instead.
func (*GetTelemetryRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_v1_proxy_proto_rawDescGZIP(), []int{0}
}

type GetTelemetryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeBootMs    uint64  `protobuf:"varint,1,opt,name=time_boot_ms,json=timeBootMs,proto3" json:"time_boot_ms,omitempty"`          // Timestamp of last message in milliseconds
	Lat           int32   `protobuf:"varint,2,opt,name=lat,proto3" json:"lat,omitempty"`                                            // Latitude in degrees * 10^7
	Lon           int32   `protobuf:"varint,3,opt,name=lon,proto3" json:"lon,omitempty"`                                            // Longitude in degrees * 10^7
	RelativeAlt   int32   `protobuf:"varint,4,opt,name=relative_alt,json=relativeAlt,proto3" json:"relative_alt,omitempty"`         // Altitude above ground in millimeters
	Roll          float32 `protobuf:"fixed32,5,opt,name=roll,proto3" json:"roll,omitempty"`                                         // Roll angle (-pi..+pi)
	Pitch         float32 `protobuf:"fixed32,6,opt,name=pitch,proto3" json:"pitch,omitempty"`                                       // Pitch angle (-pi..+pi)
	Yaw           float32 `protobuf:"fixed32,7,opt,name=yaw,proto3" json:"yaw,omitempty"`                                           // Yaw / heading angle from north (-pi..+pi)
	Airspeed      float32 `protobuf:"fixed32,8,opt,name=airspeed,proto3" json:"airspeed,omitempty"`                                 // Airspeed in m/s
	Groundspeed   float32 `protobuf:"fixed32,9,opt,name=groundspeed,proto3" json:"groundspeed,omitempty"`                           // Groundspeed in m/s
	WpDist        uint32  `protobuf:"varint,10,opt,name=wp_dist,json=wpDist,proto3" json:"wp_dist,omitempty"`                       // Distance to active waypoint in meters. 0 if no waypoint
	WindSpeed     float32 `protobuf:"fixed32,11,opt,name=wind_speed,json=windSpeed,proto3" json:"wind_speed,omitempty"`             // Wind speed in m/s
	WindDirection float32 `protobuf:"fixed32,12,opt,name=wind_direction,json=windDirection,proto3" json:"wind_direction,omitempty"` // Wind direction in degrees
}

func (x *GetTelemetryResponse) Reset() {
	*x = GetTelemetryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_v1_proxy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTelemetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTelemetryResponse) ProtoMessage() {}

func (x *GetTelemetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_v1_proxy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTelemetryResponse.ProtoReflect.Descriptor instead.
func (*GetTelemetryResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_v1_proxy_proto_rawDescGZIP(), []int{1}
}

func (x *GetTelemetryResponse) GetTimeBootMs() uint64 {
	if x != nil {
		return x.TimeBootMs
	}
	return 0
}

func (x *GetTelemetryResponse) GetLat() int32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *GetTelemetryResponse) GetLon() int32 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *GetTelemetryResponse) GetRelativeAlt() int32 {
	if x != nil {
		return x.RelativeAlt
	}
	return 0
}

func (x *GetTelemetryResponse) GetRoll() float32 {
	if x != nil {
		return x.Roll
	}
	return 0
}

func (x *GetTelemetryResponse) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *GetTelemetryResponse) GetYaw() float32 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

func (x *GetTelemetryResponse) GetAirspeed() float32 {
	if x != nil {
		return x.Airspeed
	}
	return 0
}

func (x *GetTelemetryResponse) GetGroundspeed() float32 {
	if x != nil {
		return x.Groundspeed
	}
	return 0
}

func (x *GetTelemetryResponse) GetWpDist() uint32 {
	if x != nil {
		return x.WpDist
	}
	return 0
}

func (x *GetTelemetryResponse) GetWindSpeed() float32 {
	if x != nil {
		return x.WindSpeed
	}
	return 0
}

func (x *GetTelemetryResponse) GetWindDirection() float32 {
	if x != nil {
		return x.WindDirection
	}
	return 0
}

// Target is a target being locked onto by the UAV
type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X      uint32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`           // x coordinate of center of bounding box in pixels
	Y      uint32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`           // y coordinate of center of bounding box in pixels
	Width  uint32 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`   // width of target bounding box in pixels
	Height uint32 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"` // height of target bounding box in pixels
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_v1_proxy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_v1_proxy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_proto_proxy_v1_proxy_proto_rawDescGZIP(), []int{2}
}

func (x *Target) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Target) GetY() uint32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Target) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Target) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetDetailedTelemetryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDetailedTelemetryRequest) Reset() {
	*x = GetDetailedTelemetryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_v1_proxy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailedTelemetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailedTelemetryRequest) ProtoMessage() {}

func (x *GetDetailedTelemetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_v1_proxy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailedTelemetryRequest.ProtoReflect.Descriptor instead.
func (*GetDetailedTelemetryRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_v1_proxy_proto_rawDescGZIP(), []int{3}
}

type GetDetailedTelemetryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeBootMs  uint64  `protobuf:"varint,1,opt,name=time_boot_ms,json=timeBootMs,proto3" json:"time_boot_ms,omitempty"`  // Timestamp of last message in milliseconds
	Lat         int32   `protobuf:"varint,2,opt,name=lat,proto3" json:"lat,omitempty"`                                    // Latitude in degrees * 10^7
	Lon         int32   `protobuf:"varint,3,opt,name=lon,proto3" json:"lon,omitempty"`                                    // Longitude in degrees * 10^7
	RelativeAlt int32   `protobuf:"varint,4,opt,name=relative_alt,json=relativeAlt,proto3" json:"relative_alt,omitempty"` // Altitude above ground in millimeters
	Roll        float32 `protobuf:"fixed32,5,opt,name=roll,proto3" json:"roll,omitempty"`                                 // Roll angle (-pi..+pi)
	Pitch       float32 `protobuf:"fixed32,6,opt,name=pitch,proto3" json:"pitch,omitempty"`                               // Pitch angle (-pi..+pi)
	Yaw         float32 `protobuf:"fixed32,7,opt,name=yaw,proto3" json:"yaw,omitempty"`                                   // Yaw / heading angle from north (-pi..+pi)
	Airspeed    float32 `protobuf:"fixed32,8,opt,name=airspeed,proto3" json:"airspeed,omitempty"`                         // Airspeed in m/s
	Groundspeed float32 `protobuf:"fixed32,9,opt,name=groundspeed,proto3" json:"groundspeed,omitempty"`                   // Groundspeed in m/s
	WpDist      uint32  `protobuf:"varint,10,opt,name=wp_dist,json=wpDist,proto3" json:"wp_dist,omitempty"`               // Distance to active waypoint in meters. 0 if no waypoint
	Battery     int32   `protobuf:"varint,11,opt,name=battery,proto3" json:"battery,omitempty"`                           // Remaining battery energy. Values: [0-100], -1:
	// autopilot does not estimate the remaining battery.
	Autonomous bool `protobuf:"varint,12,opt,name=autonomous,proto3" json:"autonomous,omitempty"` // True if the UAV is in a mode being controlled
	// autonomously, False otherwise
	Target        *Target `protobuf:"bytes,13,opt,name=target,proto3,oneof" json:"target,omitempty"`                                // Target being locked on by the UAV
	WindSpeed     float32 `protobuf:"fixed32,14,opt,name=wind_speed,json=windSpeed,proto3" json:"wind_speed,omitempty"`             // Wind speed in m/s
	WindDirection float32 `protobuf:"fixed32,15,opt,name=wind_direction,json=windDirection,proto3" json:"wind_direction,omitempty"` // Wind direction in degrees
}

func (x *GetDetailedTelemetryResponse) Reset() {
	*x = GetDetailedTelemetryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_v1_proxy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailedTelemetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailedTelemetryResponse) ProtoMessage() {}

func (x *GetDetailedTelemetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_v1_proxy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailedTelemetryResponse.ProtoReflect.Descriptor instead.
func (*GetDetailedTelemetryResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_v1_proxy_proto_rawDescGZIP(), []int{4}
}

func (x *GetDetailedTelemetryResponse) GetTimeBootMs() uint64 {
	if x != nil {
		return x.TimeBootMs
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetLat() int32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetLon() int32 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetRelativeAlt() int32 {
	if x != nil {
		return x.RelativeAlt
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetRoll() float32 {
	if x != nil {
		return x.Roll
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetYaw() float32 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetAirspeed() float32 {
	if x != nil {
		return x.Airspeed
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetGroundspeed() float32 {
	if x != nil {
		return x.Groundspeed
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetWpDist() uint32 {
	if x != nil {
		return x.WpDist
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetBattery() int32 {
	if x != nil {
		return x.Battery
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetAutonomous() bool {
	if x != nil {
		return x.Autonomous
	}
	return false
}

func (x *GetDetailedTelemetryResponse) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *GetDetailedTelemetryResponse) GetWindSpeed() float32 {
	if x != nil {
		return x.WindSpeed
	}
	return 0
}

func (x *GetDetailedTelemetryResponse) GetWindDirection() float32 {
	if x != nil {
		return x.WindDirection
	}
	return 0
}

// EnemyPlane represents an enemy plane's telemetry obtained from the
// competition server
type EnemyPlane struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId      int32   `protobuf:"zigzag32,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`     // Team ID of the enemy plane
	Lat         float64 `protobuf:"fixed64,2,opt,name=lat,proto3" json:"lat,omitempty"`                          // Latitude of the enemy plane in degrees
	Lon         float64 `protobuf:"fixed64,3,opt,name=lon,proto3" json:"lon,omitempty"`                          // Longitude of the enemy plane in degrees
	Alt         float64 `protobuf:"fixed64,4,opt,name=alt,proto3" json:"alt,omitempty"`                          // Altitude of the enemy plane in meters relative to ground
	Pitch       float64 `protobuf:"fixed64,5,opt,name=pitch,proto3" json:"pitch,omitempty"`                      // Pitch angle of the enemy plane in degrees
	Roll        float64 `protobuf:"fixed64,6,opt,name=roll,proto3" json:"roll,omitempty"`                        // Roll angle of the enemy plane in degrees
	Yaw         float64 `protobuf:"fixed64,7,opt,name=yaw,proto3" json:"yaw,omitempty"`                          // Yaw angle of the enemy plane in degrees
	TimeDiff    int32   `protobuf:"varint,8,opt,name=time_diff,json=timeDiff,proto3" json:"time_diff,omitempty"` // Time difference between the UAV and the enemy plane
	Groundspeed float64 `protobuf:"fixed64,9,opt,name=groundspeed,proto3" json:"groundspeed,omitempty"`          // Groundspeed in m/s
}

func (x *EnemyPlane) Reset() {
	*x = EnemyPlane{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_v1_proxy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnemyPlane) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnemyPlane) ProtoMessage() {}

func (x *EnemyPlane) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_v1_proxy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnemyPlane.ProtoReflect.Descriptor instead.
func (*EnemyPlane) Descriptor() ([]byte, []int) {
	return file_proto_proxy_v1_proxy_proto_rawDescGZIP(), []int{5}
}

func (x *EnemyPlane) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *EnemyPlane) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *EnemyPlane) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *EnemyPlane) GetAlt() float64 {
	if x != nil {
		return x.Alt
	}
	return 0
}

func (x *EnemyPlane) GetPitch() float64 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *EnemyPlane) GetRoll() float64 {
	if x != nil {
		return x.Roll
	}
	return 0
}

func (x *EnemyPlane) GetYaw() float64 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

func (x *EnemyPlane) GetTimeDiff() int32 {
	if x != nil {
		return x.TimeDiff
	}
	return 0
}

func (x *EnemyPlane) GetGroundspeed() float64 {
	if x != nil {
		return x.Groundspeed
	}
	return 0
}

type Time struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hour        uint32 `protobuf:"varint,1,opt,name=hour,proto3" json:"hour,omitempty"`
	Minute      uint32 `protobuf:"varint,2,opt,name=minute,proto3" json:"minute,omitempty"`
	Second      uint32 `protobuf:"varint,3,opt,name=second,proto3" json:"second,omitempty"`
	Millisecond uint32 `protobuf:"varint,4,opt,name=millisecond,proto3" json:"millisecond,omitempty"`
}

func (x *Time) Reset() {
	*x = Time{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_v1_proxy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Time) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Time) ProtoMessage() {}

func (x *Time) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_v1_proxy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Time.ProtoReflect.Descriptor instead.
func (*Time) Descriptor() ([]byte, []int) {
	return file_proto_proxy_v1_proxy_proto_rawDescGZIP(), []int{6}
}

func (x *Time) GetHour() uint32 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *Time) GetMinute() uint32 {
	if x != nil {
		return x.Minute
	}
	return 0
}

func (x *Time) GetSecond() uint32 {
	if x != nil {
		return x.Second
	}
	return 0
}

func (x *Time) GetMillisecond() uint32 {
	if x != nil {
		return x.Millisecond
	}
	return 0
}

type GetEnemyTelemetryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetEnemyTelemetryRequest) Reset() {
	*x = GetEnemyTelemetryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_v1_proxy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnemyTelemetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnemyTelemetryRequest) ProtoMessage() {}

func (x *GetEnemyTelemetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_v1_proxy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnemyTelemetryRequest.ProtoReflect.Descriptor instead.
func (*GetEnemyTelemetryRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_v1_proxy_proto_rawDescGZIP(), []int{7}
}

type GetEnemyTelemetryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerTime  *Time         `protobuf:"bytes,1,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	EnemyPlanes []*EnemyPlane `protobuf:"bytes,2,rep,name=enemy_planes,json=enemyPlanes,proto3" json:"enemy_planes,omitempty"`
}

func (x *GetEnemyTelemetryResponse) Reset() {
	*x = GetEnemyTelemetryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_v1_proxy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnemyTelemetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnemyTelemetryResponse) ProtoMessage() {}

func (x *GetEnemyTelemetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_v1_proxy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnemyTelemetryResponse.ProtoReflect.Descriptor instead.
func (*GetEnemyTelemetryResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_v1_proxy_proto_rawDescGZIP(), []int{8}
}

func (x *GetEnemyTelemetryResponse) GetServerTime() *Time {
	if x != nil {
		return x.ServerTime
	}
	return nil
}

func (x *GetEnemyTelemetryResponse) GetEnemyPlanes() []*EnemyPlane {
	if x != nil {
		return x.EnemyPlanes
	}
	return nil
}

// SendLockPacketRequest includes the data to be sent to the competition server on successful lock
type SendLockPacketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LockStartTime *Time `protobuf:"bytes,1,opt,name=lock_start_time,json=lockStartTime,proto3" json:"lock_start_time,omitempty"`
	LockEndTime   *Time `protobuf:"bytes,2,opt,name=lock_end_time,json=lockEndTime,proto3" json:"lock_end_time,omitempty"`
	IsAutonomous  bool  `protobuf:"varint,3,opt,name=is_autonomous,json=isAutonomous,proto3" json:"is_autonomous,omitempty"`
}

func (x *SendLockPacketRequest) Reset() {
	*x = SendLockPacketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_v1_proxy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendLockPacketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendLockPacketRequest) ProtoMessage() {}

func (x *SendLockPacketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_v1_proxy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendLockPacketRequest.ProtoReflect.Descriptor instead.
func (*SendLockPacketRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_v1_proxy_proto_rawDescGZIP(), []int{9}
}

func (x *SendLockPacketRequest) GetLockStartTime() *Time {
	if x != nil {
		return x.LockStartTime
	}
	return nil
}

func (x *SendLockPacketRequest) GetLockEndTime() *Time {
	if x != nil {
		return x.LockEndTime
	}
	return nil
}

func (x *SendLockPacketRequest) GetIsAutonomous() bool {
	if x != nil {
		return x.IsAutonomous
	}
	return false
}

type SendLockPacketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendLockPacketResponse) Reset() {
	*x = SendLockPacketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_v1_proxy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendLockPacketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendLockPacketResponse) ProtoMessage() {}

func (x *SendLockPacketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_v1_proxy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendLockPacketResponse.ProtoReflect.Descriptor instead.
func (*SendLockPacketResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_v1_proxy_proto_rawDescGZIP(), []int{10}
}

// SendKamikazePacketRequest includes the data to be sent to the competition server on succesful QR code detection
type SendKamikazePacketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KamikazeStartTime *Time  `protobuf:"bytes,1,opt,name=kamikaze_start_time,json=kamikazeStartTime,proto3" json:"kamikaze_start_time,omitempty"`
	KamikazeEndTime   *Time  `protobuf:"bytes,2,opt,name=kamikaze_end_time,json=kamikazeEndTime,proto3" json:"kamikaze_end_time,omitempty"`
	QrText            string `protobuf:"bytes,3,opt,name=qr_text,json=qrText,proto3" json:"qr_text,omitempty"`
}

func (x *SendKamikazePacketRequest) Reset() {
	*x = SendKamikazePacketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_v1_proxy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendKamikazePacketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendKamikazePacketRequest) ProtoMessage() {}

func (x *SendKamikazePacketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_v1_proxy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendKamikazePacketRequest.ProtoReflect.Descriptor instead.
func (*SendKamikazePacketRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_v1_proxy_proto_rawDescGZIP(), []int{11}
}

func (x *SendKamikazePacketRequest) GetKamikazeStartTime() *Time {
	if x != nil {
		return x.KamikazeStartTime
	}
	return nil
}

func (x *SendKamikazePacketRequest) GetKamikazeEndTime() *Time {
	if x != nil {
		return x.KamikazeEndTime
	}
	return nil
}

func (x *SendKamikazePacketRequest) GetQrText() string {
	if x != nil {
		return x.QrText
	}
	return ""
}

type SendKamikazePacketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendKamikazePacketResponse) Reset() {
	*x = SendKamikazePacketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_v1_proxy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendKamikazePacketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendKamikazePacketResponse) ProtoMessage() {}

func (x *SendKamikazePacketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_v1_proxy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendKamikazePacketResponse.ProtoReflect.Descriptor instead.
func (*SendKamikazePacketResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_v1_proxy_proto_rawDescGZIP(), []int{12}
}

type RedZonePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat float32 `protobuf:"fixed32,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon float32 `protobuf:"fixed32,2,opt,name=lon,proto3" json:"lon,omitempty"`
	Rad float32 `protobuf:"fixed32,3,opt,name=rad,proto3" json:"rad,omitempty"`
}

func (x *RedZonePacket) Reset() {
	*x = RedZonePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_v1_proxy_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedZonePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedZonePacket) ProtoMessage() {}

func (x *RedZonePacket) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_v1_proxy_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedZonePacket.ProtoReflect.Descriptor instead.
func (*RedZonePacket) Descriptor() ([]byte, []int) {
	return file_proto_proxy_v1_proxy_proto_rawDescGZIP(), []int{13}
}

func (x *RedZonePacket) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *RedZonePacket) GetLon() float32 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *RedZonePacket) GetRad() float32 {
	if x != nil {
		return x.Rad
	}
	return 0
}

type GetRedZonePacketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRedZonePacketRequest) Reset() {
	*x = GetRedZonePacketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_v1_proxy_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRedZonePacketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRedZonePacketRequest) ProtoMessage() {}

func (x *GetRedZonePacketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_v1_proxy_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRedZonePacketRequest.ProtoReflect.Descriptor instead.
func (*GetRedZonePacketRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_v1_proxy_proto_rawDescGZIP(), []int{14}
}

type GetRedZonePacketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedZones []*RedZonePacket `protobuf:"bytes,1,rep,name=redZones,proto3" json:"redZones,omitempty"`
}

func (x *GetRedZonePacketResponse) Reset() {
	*x = GetRedZonePacketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_v1_proxy_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRedZonePacketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRedZonePacketResponse) ProtoMessage() {}

func (x *GetRedZonePacketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_v1_proxy_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRedZonePacketResponse.ProtoReflect.Descriptor instead.
func (*GetRedZonePacketResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_v1_proxy_proto_rawDescGZIP(), []int{15}
}

func (x *GetRedZonePacketResponse) GetRedZones() []*RedZonePacket {
	if x != nil {
		return x.RedZones
	}
	return nil
}

var File_proto_proxy_v1_proxy_proto protoreflect.FileDescriptor

var file_proto_proxy_v1_proxy_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd8, 0x02,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x62,
	0x6f, 0x6f, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x4d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x79, 0x61, 0x77,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x79, 0x61, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x69, 0x72, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x61,
	0x69, 0x72, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x70, 0x5f,
	0x64, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x70, 0x44, 0x69,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x6e, 0x64, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x77, 0x69, 0x6e, 0x64, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x1d, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x54, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd4, 0x03, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x54, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0c,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x4d, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x61, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61,
	0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x41, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x69, 0x74,
	0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x12,
	0x10, 0x0a, 0x03, 0x79, 0x61, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x79, 0x61,
	0x77, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x69, 0x72, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x69, 0x72, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x77, 0x70, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x77, 0x70, 0x44, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d, 0x6f, 0x75, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d, 0x6f,
	0x75, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x48, 0x00, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x6e, 0x64, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x77, 0x69, 0x6e, 0x64, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x22, 0xd6, 0x01, 0x0a, 0x0a, 0x45, 0x6e, 0x65, 0x6d, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61, 0x6c, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x79, 0x61,
	0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x79, 0x61, 0x77, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x70, 0x65, 0x65, 0x64, 0x22, 0x6c, 0x0a, 0x04, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x69, 0x6c, 0x6c, 0x69,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x45, 0x6e, 0x65, 0x6d, 0x79, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x65,
	0x6d, 0x79, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x65, 0x6e, 0x65, 0x6d, 0x79, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x65, 0x6d, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x65,
	0x52, 0x0b, 0x65, 0x6e, 0x65, 0x6d, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x73, 0x22, 0xa8, 0x01,
	0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x32, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6e, 0x6f,
	0x6d, 0x6f, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x41, 0x75,
	0x74, 0x6f, 0x6e, 0x6f, 0x6d, 0x6f, 0x75, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64,
	0x4c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x6e, 0x64, 0x4b, 0x61, 0x6d, 0x69, 0x6b,
	0x61, 0x7a, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3e, 0x0a, 0x13, 0x6b, 0x61, 0x6d, 0x69, 0x6b, 0x61, 0x7a, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x11, 0x6b,
	0x61, 0x6d, 0x69, 0x6b, 0x61, 0x7a, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x3a, 0x0a, 0x11, 0x6b, 0x61, 0x6d, 0x69, 0x6b, 0x61, 0x7a, 0x65, 0x5f, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0f, 0x6b, 0x61, 0x6d,
	0x69, 0x6b, 0x61, 0x7a, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x71, 0x72, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x53, 0x65, 0x6e, 0x64, 0x4b, 0x61, 0x6d,
	0x69, 0x6b, 0x61, 0x7a, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x0d, 0x52, 0x65, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x72, 0x61, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x5a,
	0x6f, 0x6e, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x08, 0x72, 0x65,
	0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x32, 0xd0, 0x03, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45,
	0x6e, 0x65, 0x6d, 0x79, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x65, 0x6d,
	0x79, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x6e, 0x65, 0x6d, 0x79, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x53, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64,
	0x4c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a,
	0x12, 0x53, 0x65, 0x6e, 0x64, 0x4b, 0x61, 0x6d, 0x69, 0x6b, 0x61, 0x7a, 0x65, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x4b, 0x61, 0x6d, 0x69, 0x6b, 0x61, 0x7a, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4b, 0x61, 0x6d, 0x69, 0x6b, 0x61, 0x7a, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x9f, 0x01, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x75, 0x73, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x50,
	0x58, 0x58, 0xaa, 0x02, 0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x08,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x14, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x09, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_proxy_v1_proxy_proto_rawDescOnce sync.Once
	file_proto_proxy_v1_proxy_proto_rawDescData = file_proto_proxy_v1_proxy_proto_rawDesc
)

func file_proto_proxy_v1_proxy_proto_rawDescGZIP() []byte {
	file_proto_proxy_v1_proxy_proto_rawDescOnce.Do(func() {
		file_proto_proxy_v1_proxy_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_proxy_v1_proxy_proto_rawDescData)
	})
	return file_proto_proxy_v1_proxy_proto_rawDescData
}

var file_proto_proxy_v1_proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_proxy_v1_proxy_proto_goTypes = []any{
	(*GetTelemetryRequest)(nil),          // 0: proxy.v1.GetTelemetryRequest
	(*GetTelemetryResponse)(nil),         // 1: proxy.v1.GetTelemetryResponse
	(*Target)(nil),                       // 2: proxy.v1.Target
	(*GetDetailedTelemetryRequest)(nil),  // 3: proxy.v1.GetDetailedTelemetryRequest
	(*GetDetailedTelemetryResponse)(nil), // 4: proxy.v1.GetDetailedTelemetryResponse
	(*EnemyPlane)(nil),                   // 5: proxy.v1.EnemyPlane
	(*Time)(nil),                         // 6: proxy.v1.Time
	(*GetEnemyTelemetryRequest)(nil),     // 7: proxy.v1.GetEnemyTelemetryRequest
	(*GetEnemyTelemetryResponse)(nil),    // 8: proxy.v1.GetEnemyTelemetryResponse
	(*SendLockPacketRequest)(nil),        // 9: proxy.v1.SendLockPacketRequest
	(*SendLockPacketResponse)(nil),       // 10: proxy.v1.SendLockPacketResponse
	(*SendKamikazePacketRequest)(nil),    // 11: proxy.v1.SendKamikazePacketRequest
	(*SendKamikazePacketResponse)(nil),   // 12: proxy.v1.SendKamikazePacketResponse
	(*RedZonePacket)(nil),                // 13: proxy.v1.RedZonePacket
	(*GetRedZonePacketRequest)(nil),      // 14: proxy.v1.GetRedZonePacketRequest
	(*GetRedZonePacketResponse)(nil),     // 15: proxy.v1.GetRedZonePacketResponse
}
var file_proto_proxy_v1_proxy_proto_depIdxs = []int32{
	2,  // 0: proxy.v1.GetDetailedTelemetryResponse.target:type_name -> proxy.v1.Target
	6,  // 1: proxy.v1.GetEnemyTelemetryResponse.server_time:type_name -> proxy.v1.Time
	5,  // 2: proxy.v1.GetEnemyTelemetryResponse.enemy_planes:type_name -> proxy.v1.EnemyPlane
	6,  // 3: proxy.v1.SendLockPacketRequest.lock_start_time:type_name -> proxy.v1.Time
	6,  // 4: proxy.v1.SendLockPacketRequest.lock_end_time:type_name -> proxy.v1.Time
	6,  // 5: proxy.v1.SendKamikazePacketRequest.kamikaze_start_time:type_name -> proxy.v1.Time
	6,  // 6: proxy.v1.SendKamikazePacketRequest.kamikaze_end_time:type_name -> proxy.v1.Time
	13, // 7: proxy.v1.GetRedZonePacketResponse.redZones:type_name -> proxy.v1.RedZonePacket
	0,  // 8: proxy.v1.ProxyService.GetTelemetry:input_type -> proxy.v1.GetTelemetryRequest
	7,  // 9: proxy.v1.ProxyService.GetEnemyTelemetry:input_type -> proxy.v1.GetEnemyTelemetryRequest
	9,  // 10: proxy.v1.ProxyService.SendLockPacket:input_type -> proxy.v1.SendLockPacketRequest
	11, // 11: proxy.v1.ProxyService.SendKamikazePacket:input_type -> proxy.v1.SendKamikazePacketRequest
	14, // 12: proxy.v1.ProxyService.GetRedZonePacket:input_type -> proxy.v1.GetRedZonePacketRequest
	1,  // 13: proxy.v1.ProxyService.GetTelemetry:output_type -> proxy.v1.GetTelemetryResponse
	8,  // 14: proxy.v1.ProxyService.GetEnemyTelemetry:output_type -> proxy.v1.GetEnemyTelemetryResponse
	10, // 15: proxy.v1.ProxyService.SendLockPacket:output_type -> proxy.v1.SendLockPacketResponse
	12, // 16: proxy.v1.ProxyService.SendKamikazePacket:output_type -> proxy.v1.SendKamikazePacketResponse
	15, // 17: proxy.v1.ProxyService.GetRedZonePacket:output_type -> proxy.v1.GetRedZonePacketResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_proxy_v1_proxy_proto_init() }
func file_proto_proxy_v1_proxy_proto_init() {
	if File_proto_proxy_v1_proxy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_proxy_v1_proxy_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetTelemetryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_v1_proxy_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetTelemetryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_v1_proxy_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_v1_proxy_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetDetailedTelemetryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_v1_proxy_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetDetailedTelemetryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_v1_proxy_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*EnemyPlane); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_v1_proxy_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Time); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_v1_proxy_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetEnemyTelemetryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_v1_proxy_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetEnemyTelemetryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_v1_proxy_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SendLockPacketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_v1_proxy_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SendLockPacketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_v1_proxy_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SendKamikazePacketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_v1_proxy_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*SendKamikazePacketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_v1_proxy_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*RedZonePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_v1_proxy_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetRedZonePacketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_v1_proxy_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetRedZonePacketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_proxy_v1_proxy_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_proxy_v1_proxy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_proxy_v1_proxy_proto_goTypes,
		DependencyIndexes: file_proto_proxy_v1_proxy_proto_depIdxs,
		MessageInfos:      file_proto_proxy_v1_proxy_proto_msgTypes,
	}.Build()
	File_proto_proxy_v1_proxy_proto = out.File
	file_proto_proxy_v1_proxy_proto_rawDesc = nil
	file_proto_proxy_v1_proxy_proto_goTypes = nil
	file_proto_proxy_v1_proxy_proto_depIdxs = nil
}
